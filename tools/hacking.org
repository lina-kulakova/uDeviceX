* To driving force on "inner" particles

  int type; float driving_force, mass, vx = s1.y, y = s0.y;
  if      (rbcflag                      ) type = MEMB_TYPE;
  else if (!rbcflag &&  lastbit::get(vx)) type =  IN_TYPE;
  else if (!rbcflag && !lastbit::get(vx)) type = OUT_TYPE;
  mass  = (type == MEMB_TYPE) ? rbc_mass : 1;
#ifdef GWRP
  /* TODO: no driving force on "inner" particles */
  driving_force = (type ==   IN_TYPE) ? 0 : _driving_force;
#else
  driving_force = _driving_force;
#endif


* Matrix transfrom on a host
void transform0(float* rr0, int nv, float *A, /* output */ Particle* pp) {
  for (int iv = 0; iv < nv; iv++) {
    float *r =    pp[iv].r, *v = pp[iv].v;
    float *r0 = &rr0[3*iv];
    for (int c = 0, i = 0; c < 3; c++) {
      r[c] += A[i++]*r0[0]; /* matrix transformation */
      r[c] += A[i++]*r0[1];
      r[c] += A[i++]*r0[2];
      r[c] += A[i++];

      v[c] = 0;
    }
  }
}

